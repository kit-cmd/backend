name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: hanium  # Replace with your database name
          MYSQL_USER: ${{secrets.DATABASE_USERNAME}}
          MYSQL_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build and test
      run: |
        cd DisasterInformationCollectionServer
        chmod +x gradlew
        ./gradlew clean build

        cd ../NotificationServer
        chmod +x gradlew
        ./gradlew clean build

        cd ../UserServer
        chmod +x gradlew
        ./gradlew clean build

        cd ../ShelterInfoServer
        chmod +x gradlew
        ./gradlew clean build


  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-docker@v2

    - name: Build and push Docker images
      run: |
        docker-compose -f docker-compose.yml build
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker-compose -f docker-compose.yml push
