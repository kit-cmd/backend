name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JWT_SECRET: ${{secrets.JWT_SECRET}}
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup MySQL
      uses: samin/mysql-action@v1
      with:
        character set server: 'utf8'
        mysql database: 'hanium'
        mysql user: 'test'
        mysql password: ${{ secrets.DATABASE_PASSWORD }}

    - name: Build and test
      run: |
        cd DisasterInformationCollectionServer
        chmod +x gradlew
        ./gradlew clean build

        cd ../NotificationServer
        chmod +x gradlew
        ./gradlew clean build

        cd ../UserServer
        chmod +x gradlew
        ./gradlew clean build

        cd ../ShelterInfoServer
        chmod +x gradlew
        ./gradlew clean build


  deploy:
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-docker@v2

    - name: Build and push Docker images
      run: |
        docker-compose -f docker-compose.yml build
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker-compose -f docker-compose.yml push
